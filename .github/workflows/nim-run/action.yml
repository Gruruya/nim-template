name : 'Nim Run'
description: 'Run shell commands in an environment with Nim.'

inputs:
  run:
    description: 'Commands to run'
    required: false
  version:
    description: 'Version of Nim.'
    required: false
    default: 'devel'
  token:
    description: 'Your GitHub token.'
    required: true
  arch:
    description: 'Architecture to build Nim for.'
    required: false
    default: 'x86_64'

runs:
  using: "composite"
  steps:
    - name: Get Date
      shell: bash
      id: get-date
      if: ${{ inputs.arch == 'x86_64' || inputs.arch == 'x86' }}
      run: echo "date=$(date "+%Y-%m-%d")" >> $GITHUB_OUTPUT

    - name: Cache choosenim
      if: ${{ inputs.arch == 'x86_64' || inputs.arch == 'x86' }}
      uses: actions/cache@v3
      with:
        path: ~/.choosenim
        key: ${{ runner.os }}-choosenim-${{ inputs.version }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          ${{ runner.os }}-choosenim-${{ inputs.version }}-

    - name: Cache nimble
      uses: actions/cache@v3
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-${{ inputs.arch }}-nimble-${{ hashFiles('*.nimble') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.arch }}-nimble-

    - name: Setup Nim
      if: ${{ inputs.arch == 'x86_64' || inputs.arch == 'x86' }}
      uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: ${{ inputs.version }}
        repo-token: ${{ inputs.token }}

    - name: Run
      shell: bash
      if: ${{ inputs.arch == 'x86_64' || inputs.arch == 'x86' }}
      run: ${{ inputs.run }}

    - name: Setup Nim for ${{ inputs.arch }} and Run
      if: ${{ inputs.arch != 'x86_64' && inputs.arch != 'x86' }}
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: ${{ inputs.arch }}
        distro: ubuntu_devel
        githubToken: ${{ inputs.token }}

        dockerRunArgs: |
          --volume "$HOME/.nimble:/root/.nimble"

        install: |
          apt-get update -q -y
          apt-get install -q -y nim

        run: |
          export PATH="$PATH:${NIMBLE_DIR:-$HOME/.nimble}/bin"
          ${{ inputs.run }}

    - name: Output tests result
      shell: bash
      if: failure()
      run: echo "::set-output name=failure::true"
